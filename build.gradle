
plugins {
    id 'java-library'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group = 'zuhowks'
version = '1.6-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

publishing {
    repositories {
        maven {
            name = "Asilux-API"
            url = uri("https://maven.pkg.github.com/zuhowks/asilux-api")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = 'fr.zuhowks'
            artifactId = 'asilux-api-spigot'
            version = '1.6-SNAPSHOT'

            from(components.java)
        }
    }
}


dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.12.2-R0.1-SNAPSHOT'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '2.7.9'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7+'

    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

    // https://mvnrepository.com/artifact/org.redisson/redisson
    implementation group: 'org.redisson', name: 'redisson', version: '3.16.8'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.1'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.13.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.1'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
